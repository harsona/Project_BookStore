<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>Project_BookStore</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

<!-- 1. 시큐리티 역할 설정-->
  <security-role> 
    <description></description>
    <role-name>admin</role-name>
  </security-role>

<!-- 2. 시큐리티 제약 사항 설정 -->
  <security-constraint> 
    <display-name>BookStore Security</display-name>
    <web-resource-collection>
      <web-resource-name>BookStore</web-resource-name>
      <description></description>
      <url-pattern>/addBook.jsp</url-pattern> <!-- 접근을 제한할 요청경로 -->
      <url-pattern>/editBook.jsp</url-pattern> 
    </web-resource-collection>
    <auth-constraint>
      <description>권한 관리자명</description>
      <role-name>admin</role-name>
    </auth-constraint>
  </security-constraint>

<!-- 3. 시큐리티 인증 설정-->
  <login-config> 
    <auth-method>FORM</auth-method>
    <form-login-config>
      <form-login-page>/member/login.jsp</form-login-page>
      <form-error-page>/member/login_failed.jsp</form-error-page>
    </form-login-config>
  </login-config>

<!-- 4. 오류가 발생했을 때 exceptionNoPage.jsp를 호출하도록 코드 작성-->
  <error-page> 
	<error-code>404</error-code>
	<location>/exception/exceptionNoPage.jsp</location>>
  </error-page>

<!-- 5. 필터 처리를 이용해 로그 기록하기 -->
  <filter>
	<filter-name>LogFilter</filter-name>
	<filter-class>filter.LogFilter</filter-class>
  </filter>
  <filter-mapping>
	<filter-name>LogFilter</filter-name>
	<url-pattern>/*</url-pattern>
  </filter-mapping>

</web-app>